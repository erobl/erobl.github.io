{"version":3,"sources":["webpack:///./src/components/BlogPaginator.js","webpack:///./src/templates/blogList.js"],"names":["CenteredDiv","styled","div","StyledLink","Link","StyledDiv","BlogPaginator","createPageNumbers","numbers","i","this","props","numPages","currentPage","push","key","to","backButton","backpage","nextButton","nextpage","render","React","Component","data","pageContext","edges","allMarkdownRemark","Helmet","Content","map","edge","frontmatter","node","path","title","dangerouslySetInnerHTML","__html","excerpt","query"],"mappings":"uLAIA,IAAMA,EAAcC,IAAOC,IAAV,iFAAGD,CAAH,uBAIXE,EAAaF,YAAOG,KAAV,gFAAGH,CAAH,uCAKVI,EAAYJ,IAAOC,IAAV,+EAAGD,CAAH,4DAMMK,E,wLACjBC,kBAAA,WAEI,IADA,IAAIC,EAAU,GACNC,EAAI,EAAGA,EAAIC,KAAKC,MAAMC,SAAUH,IACjCA,IAAMC,KAAKC,MAAME,YAAc,EAC9BL,EAAQM,KACJ,kBAACT,EAAD,KACKI,EAAE,IAIXD,EAAQM,KAAK,kBAACX,EAAD,CAAYY,IAAG,qBAAsBN,EAAE,GAAKO,GAAE,UAAiB,IAANP,EAAU,GAAKA,EAAI,IAChFA,EAAE,IAKnB,OAAOD,G,EAGXS,WAAA,WACI,IAAMC,EAAWR,KAAKC,MAAME,YAAc,EAC1C,OAA8B,IAA3BH,KAAKC,MAAME,YACF,kBAACV,EAAD,CAAYY,IAAG,OAAUC,GAAE,UAAwB,IAAbE,EAAiB,GAAKA,IAA5D,KAIL,I,EAGXC,WAAA,WACI,IAAMC,EAAWV,KAAKC,MAAME,YAAc,EAC1C,OAAGH,KAAKC,MAAME,cAAgBH,KAAKC,MAAMC,SAC7B,kBAACT,EAAD,CAAYY,IAAG,OAAUC,GAAE,UAAwB,IAAbI,EAAiB,GAAKA,IAA5D,KAIL,I,EAGXC,OAAA,WACI,OACI,kBAACrB,EAAD,KACKU,KAAKO,aACLP,KAAKH,oBACLG,KAAKS,e,GA7CqBG,IAAMC,WCnBjD,sCAQe,sBAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YACXC,EAAUF,EAAKG,kBAAfD,MACR,OACA,kBAAC,IAAD,KACI,kBAACE,EAAA,OAAD,KACI,uDAEJ,kBAACC,EAAA,EAAD,KACI,oCACCH,EAAMI,KAAI,SAAAC,GAAS,IACRC,EAAgBD,EAAKE,KAArBD,YACR,OACI,yBAAKjB,IAAKiB,EAAYE,MAClB,4BACI,kBAAC,IAAD,CAAMlB,GAAIgB,EAAYE,MACjBF,EAAYG,QAGrB,yBAAKC,wBAAyB,CAAEC,OAAQN,EAAKE,KAAKK,eAK9D,kBAAC,EAAD,CAAezB,YAAaY,EAAYZ,YAAaD,SAAUa,EAAYb,cAvBxE,IA6BF2B,EAAK","file":"component---src-templates-blog-list-js-6661acd469c950ca923e.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nconst CenteredDiv = styled.div`\n    text-align: center\n`\n\nconst StyledLink = styled(Link)`\n    margin-right: 3px;\n    margin-left: 3px;\n`\n\nconst StyledDiv = styled.div`\n    display: inline-block;\n    margin-right: 3px;\n    margin-left: 3px;\n`\n\nexport default class BlogPaginator extends React.Component {\n    createPageNumbers() {\n        let numbers = []\n        for(var i = 0; i < this.props.numPages; i++) {\n            if(i === this.props.currentPage - 1) {\n                numbers.push(\n                    <StyledDiv>\n                        {i+1}\n                    </StyledDiv>\n                )\n            } else {\n                numbers.push(<StyledLink key={`pagination-number${i+1}`} to={`/blog/${i === 0 ? \"\" : i + 1}`}>\n                        {i+1}\n                </StyledLink>\n                )\n            }\n        }\n        return numbers\n    }\n\n    backButton() {\n        const backpage = this.props.currentPage - 1\n        if(this.props.currentPage !== 1) {\n            return (<StyledLink key={`back`} to={`/blog/${backpage === 1 ? \"\" : backpage}`}>\n                &lt;\n            </StyledLink>)\n        }\n        return \"\"\n    }\n\n    nextButton() {\n        const nextpage = this.props.currentPage + 1\n        if(this.props.currentPage !== this.props.numPages) {\n            return (<StyledLink key={`next`} to={`/blog/${nextpage === 1 ? \"\" : nextpage}`}>\n                &gt;\n            </StyledLink>)\n        }\n        return \"\"\n    }\n\n    render() {\n        return (\n            <CenteredDiv>\n                {this.backButton()}\n                {this.createPageNumbers()}\n                {this.nextButton()}\n            </CenteredDiv>\n        );\n    }\n}\n","import React from \"react\"\nimport Layout from \"../components/layout.js\"\nimport Content from \"../components/Content.js\"\nimport { Helmet } from \"react-helmet\"\nimport { graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport BlogPaginator from \"../components/BlogPaginator.js\"\n\nexport default ({data, pageContext}) => {\n    const { edges } = data.allMarkdownRemark\n    return (\n    <Layout>\n        <Helmet>\n            <title>Blog - Edgar Robles</title>\n        </Helmet>\n        <Content>\n            <h1>Blog</h1>\n            {edges.map(edge => {\n                const { frontmatter } = edge.node\n                return (\n                    <div key={frontmatter.path}>\n                        <h2>\n                            <Link to={frontmatter.path}>\n                                {frontmatter.title}\n                            </Link>\n                        </h2>\n                        <div dangerouslySetInnerHTML={{ __html: edge.node.excerpt }} />\n                    </div>\n                )\n            })}\n\n            <BlogPaginator currentPage={pageContext.currentPage} numPages={pageContext.numPages}/>\n        </Content>\n    </Layout>\n    )\n}\n\nexport const query = graphql`\n    query BlogQuery($skip: Int!, $limit: Int!) {\n        allMarkdownRemark(\n            sort: {order: DESC, fields: [frontmatter___date]},\n            limit: $limit,\n            skip: $skip\n        ) {\n            edges { \n                node {\n                    frontmatter {\n                        title\n                        path\n                        date\n                    }\n                    excerpt(pruneLength: 90, format: HTML)\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}