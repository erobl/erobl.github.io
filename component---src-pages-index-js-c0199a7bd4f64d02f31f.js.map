{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/SidebarContents.js","webpack:///./src/components/TitleButton.js","webpack:///./src/components/layout.js","webpack:///./src/components/content.js","webpack:///./src/components/splashscreen.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["React","createContext","PropTypes","object","string","isRequired","func","StyledLink","styled","Link","withConfig","displayName","componentId","SidebarLink","props","react_default","a","createElement","style","padding","to","children","BioStyle","div","Bio","textAlign","href","index_es","icon","SidebarContents","Content","SidebarContents_Bio","SidebarContents_SidebarLink","Bar","BurgButton","button","TitleButton","onClick","mql","window","matchMedia","addListener","removeListener","matches","Layout","_this","_Component","call","this","state","sidebarDocked","sidebarOpen","mediaQueryChanged","bind","assertThisInitialized_default","onSetSidebarOpen","componentWillMount","componentWillUnmount","setState","open","render","_this2","react_sidebar_esm","sidebar","docked","onSetOpen","styles","background","shadow","Component","content","_ref","className","containerStyle","splashscreen","library","add","faBars","fab","__webpack_exports__","layout_Layout","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape"],"mappings":"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","file":"component---src-pages-index-js-c0199a7bd4f64d02f31f.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n\n    &:focus, &:hover, &:visited, &:link, &:active {\n        text-decoration: none;\n        color: #383C41;\n    }\n\n    font-size: 16pt;\n`\n\nconst SidebarLink = (props) => {\n    return (\n    <div style={{padding: \"1em 0em\"}}>\n        <StyledLink to={props.to}>{props.children}</StyledLink>\n    </div>\n    )\n}\n\nconst BioStyle = styled.div`\n    font-size: 30pt;\n    padding-bottom: 1em;\n`\nconst Bio = () => {\n    return <BioStyle>\n        Edgar Robles\n        <div style={{ textAlign: \"center\" }}>\n            <a href=\"http://github.com/erobl/\">\n                <FontAwesomeIcon icon={[\"fab\", \"github\"]} style={{padding: \"0pt 12pt\"}} /> \n            </a>\n            <a href=\"http://twitter.com/edgarobl\">\n                <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} style={{padding: \"0pt 12pt\"}} /> \n            </a>\n        </div>\n    </BioStyle>\n}\n\n\nexport default () => {\n    const Content = styled.div`\n        padding: 1em 2em;\n    `\n    return (\n        <Content>\n            <Bio />\n            <SidebarLink to=\"/\">Seccion</SidebarLink>\n            <SidebarLink to=\"/\">Seccion</SidebarLink>\n            <SidebarLink to=\"/\">Seccion</SidebarLink>\n            <SidebarLink to=\"/\">Seccion</SidebarLink>\n        </Content>\n    )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Bar = styled.div`\n    background: #CCCCCC;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    padding-right: 10px;\n    width: 100%;\n    height: 40px;\n`\n\nconst BurgButton = styled.button`\n    border: none;\n    background-color: #BBBBBB;\n    padding: 5px 10px;\n    font-size: 16pt;\n`\n\nexport default (props) => {\n    return (\n        <Bar>\n            <BurgButton onClick={props.onClick}>\n                <FontAwesomeIcon icon=\"bars\" />\n            </BurgButton>\n        </Bar>\n    )\n}\n","import React, { Component } from \"react\";\nimport Sidebar from \"react-sidebar\";\nimport \"./layout.css\"\nimport SidebarContents from \"./SidebarContents\";\nimport TitleButton from \"./TitleButton\";\n\nconst mql = (typeof window !== `undefined` ?\n    window.matchMedia(`(min-width: 800px)`) :\n    {\n        addListener: () => {},\n        removeListener: () => {},\n        matches: false\n    });\n\nexport default class Layout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sidebarDocked: mql.matches,\n            sidebarOpen: false\n        };\n\n        this.mediaQueryChanged = this.mediaQueryChanged.bind(this);\n        this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\n    }\n\n    componentWillMount() {\n        mql.addListener(this.mediaQueryChanged);\n    }\n \n    componentWillUnmount() {\n        this.state.mql.removeListener(this.mediaQueryChanged);\n    }\n \n    mediaQueryChanged() {\n        this.setState({ sidebarDocked: mql.matches, sidebarOpen: false });\n    }\n\n    onSetSidebarOpen(open) {\n        this.setState({ sidebarOpen: open });\n    }\n\n    render() {\n        return (\n            <Sidebar\n                sidebar={<SidebarContents />}\n                open={this.state.sidebarOpen}\n                docked={this.state.sidebarDocked}\n                onSetOpen={this.onSetSidebarOpen}\n                styles={{ sidebar: {background: \"#CCCCCC\"} }}\n                shadow={false}\n            >\n                {!this.state.sidebarDocked ? <TitleButton onClick={() => this.onSetSidebarOpen(true)}>open</TitleButton> : \"\"}\n                {this.props.children}\n            </Sidebar>\n        );\n    }\n}\n","import React from \"react\"\nimport containerStyle from \"./components.module.css\"\n\nexport default ({children}) => <div className={containerStyle.content}>{children}</div>\n","import React from \"react\"\nimport containerStyle from \"./splashscreen.module.css\"\n\nexport default () => <div className={containerStyle.splashscreen}>erobl.xyz</div>\n","import React from \"react\"\nimport Layout from \"../components/layout.js\"\nimport Content from \"../components/content.js\"\nimport SplashScreen from \"../components/splashscreen.js\"\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n\nlibrary.add(faBars, fab)\n\n\nexport default () => (\n<Layout>\n    <Content>\n        <SplashScreen />\n    </Content>\n</Layout>\n)\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}